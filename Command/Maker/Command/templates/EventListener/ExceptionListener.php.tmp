<?php

namespace Elenyum\ApiDocBundle\EventListener;

use Elenyum\ApiDocBundle\Validator\ValidationException;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpKernel\Event\ExceptionEvent;

class ExceptionListener
{
    public function onKernelException(ExceptionEvent $event)
    {
        // You get the exception object from the received event
        $exception = $event->getThrowable();

        $message = $exception->getMessage();
        $code = $exception->getCode(); // Response::HTTP_UNPROCESSABLE_ENTITY;
        if ($exception instanceof ValidationException) {
            $message = json_decode($exception->getMessage());
            $code = Response::HTTP_PRECONDITION_FAILED;
        }
        // create json response and set the nice message from exception
        $customResponse = new JsonResponse(['status' => false, 'message' => $message],);

        // set it as response and it will be sent
        $event->setResponse($customResponse);

    }
}

